{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clent\\\\OneDrive\\\\Desktop\\\\Weather\\\\weather-weather\\\\src\\\\components\\\\ThreeHour.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherComponent = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Replace these with your actual latitude and longitude\n  const lat = 35.6895; // Example latitude\n  const lon = 139.6917; // Example longitude\n  const API_KEY = '6a4306a0f2c73c28dc5c3bbf739e87d0';\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${API_KEY}`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setWeatherData(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchWeatherData();\n  }, [lat, lon, API_KEY]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 21\n  }, this);\n  if (!weatherData) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 28\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(weatherData, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherComponent, \"5D/vak42bx6E1PZA6agARYhQL9Q=\");\n_c = WeatherComponent;\nexport default WeatherComponent;\nvar _c;\n$RefreshReg$(_c, \"WeatherComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WeatherComponent","_s","weatherData","setWeatherData","loading","setLoading","error","setError","lat","lon","API_KEY","fetchWeatherData","response","fetch","ok","Error","data","json","children","fileName","_jsxFileName","lineNumber","columnNumber","message","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/clent/OneDrive/Desktop/Weather/weather-weather/src/components/ThreeHour.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst WeatherComponent = () => {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Replace these with your actual latitude and longitude\r\n  const lat = 35.6895; // Example latitude\r\n  const lon = 139.6917; // Example longitude\r\n  const API_KEY = '6a4306a0f2c73c28dc5c3bbf739e87d0';\r\n\r\n  useEffect(() => {\r\n    const fetchWeatherData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${API_KEY}`);\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        setWeatherData(data);\r\n      } catch (error) {\r\n        setError(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchWeatherData();\r\n  }, [lat, lon, API_KEY]);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error: {error.message}</p>;\r\n  if (!weatherData) return <p>No data available</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Weather Forecast</h1>\r\n      {/* Render your weather data here */}\r\n      <pre>{JSON.stringify(weatherData, null, 2)}</pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMY,GAAG,GAAG,OAAO,CAAC,CAAC;EACrB,MAAMC,GAAG,GAAG,QAAQ,CAAC,CAAC;EACtB,MAAMC,OAAO,GAAG,kCAAkC;EAElDb,SAAS,CAAC,MAAM;IACd,MAAMc,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACFN,UAAU,CAAC,IAAI,CAAC;QAChB,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,wDAAwDL,GAAG,QAAQC,GAAG,UAAUC,OAAO,EAAE,CAAC;QACvH,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCd,cAAc,CAACa,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOV,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAAC;MACjB,CAAC,SAAS;QACRD,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDM,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACH,GAAG,EAAEC,GAAG,EAAEC,OAAO,CAAC,CAAC;EAEvB,IAAIN,OAAO,EAAE,oBAAOL,OAAA;IAAAmB,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,IAAIhB,KAAK,EAAE,oBAAOP,OAAA;IAAAmB,QAAA,GAAG,SAAO,EAACZ,KAAK,CAACiB,OAAO;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAC/C,IAAI,CAACpB,WAAW,EAAE,oBAAOH,OAAA;IAAAmB,QAAA,EAAG;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEjD,oBACEvB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEzBvB,OAAA;MAAAmB,QAAA,EAAMM,IAAI,CAACC,SAAS,CAACvB,WAAW,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAACrB,EAAA,CAzCID,gBAAgB;AAAA0B,EAAA,GAAhB1B,gBAAgB;AA2CtB,eAAeA,gBAAgB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}