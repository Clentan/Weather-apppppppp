{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clent\\\\OneDrive\\\\Desktop\\\\Weather\\\\weather-weather\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = '6a4306a0f2c73c28dc5c3bbf739e87d0'; // Your OpenWeatherMap API key\n\nfunction fetchDailyWeather(lat, lon, apiKey) {\n  return fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${apiKey}`).then(response => response.json()).then(data => {\n    const dailyWeather = {};\n    data.list.forEach(entry => {\n      const date = new Date(entry.dt * 1000).toISOString().split('T')[0];\n      if (!dailyWeather[date]) {\n        dailyWeather[date] = {\n          temperatures: [],\n          weatherConditions: []\n        };\n      }\n      dailyWeather[date].temperatures.push(entry.main.temp);\n      dailyWeather[date].weatherConditions.push(entry.weather[0].main);\n    });\n    return Object.keys(dailyWeather).map(day => {\n      const {\n        temperatures,\n        weatherConditions\n      } = dailyWeather[day];\n      const maxTemp = Math.max(...temperatures);\n      const minTemp = Math.min(...temperatures);\n      const mostCommonCondition = weatherConditions.sort((a, b) => weatherConditions.filter(v => v === a).length - weatherConditions.filter(v => v === b).length).pop();\n      return {\n        date: day,\n        maxTemp,\n        minTemp,\n        condition: mostCommonCondition\n      };\n    });\n  });\n}\nfunction WeatherForecast() {\n  _s();\n  const [dailySummaries, setDailySummaries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const lat = 44.34; // Example latitude\n  const lon = 10.99; // Example longitude\n\n  useEffect(() => {\n    fetchDailyWeather(lat, lon, apiKey).then(summaries => {\n      setDailySummaries(summaries);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching weather data:', error);\n      setLoading(false);\n    });\n  }, [lat, lon]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Daily Weather Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }, this), !loading && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: dailySummaries.map(summary => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", summary.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Max Temperature: \", Math.ceil(summary.maxTemp), \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Min Temperature: \", Math.floor(summary.minTemp), \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Condition: \", summary.condition]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)]\n      }, summary.date, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(WeatherForecast, \"6gTsd04atCG7FrtozcN7FuVV/qU=\");\n_c = WeatherForecast;\nexport default WeatherForecast;\nvar _c;\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","apiKey","fetchDailyWeather","lat","lon","fetch","then","response","json","data","dailyWeather","list","forEach","entry","date","Date","dt","toISOString","split","temperatures","weatherConditions","push","main","temp","weather","Object","keys","map","day","maxTemp","Math","max","minTemp","min","mostCommonCondition","sort","a","b","filter","v","length","pop","condition","WeatherForecast","_s","dailySummaries","setDailySummaries","loading","setLoading","summaries","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","summary","ceil","floor","_c","$RefreshReg$"],"sources":["C:/Users/clent/OneDrive/Desktop/Weather/weather-weather/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst apiKey = '6a4306a0f2c73c28dc5c3bbf739e87d0'; // Your OpenWeatherMap API key\n\nfunction fetchDailyWeather(lat, lon, apiKey) {\n  return fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${apiKey}`)\n    .then(response => response.json())\n    .then(data => {\n      const dailyWeather = {};\n\n      data.list.forEach(entry => {\n        const date = new Date(entry.dt * 1000).toISOString().split('T')[0];\n        if (!dailyWeather[date]) {\n          dailyWeather[date] = { temperatures: [], weatherConditions: [] };\n        }\n\n        dailyWeather[date].temperatures.push(entry.main.temp);\n        dailyWeather[date].weatherConditions.push(entry.weather[0].main);\n      });\n\n      return Object.keys(dailyWeather).map(day => {\n        const { temperatures, weatherConditions } = dailyWeather[day];\n        const maxTemp = Math.max(...temperatures);\n        const minTemp = Math.min(...temperatures);\n        const mostCommonCondition = weatherConditions\n          .sort((a, b) =>\n            weatherConditions.filter(v => v === a).length -\n            weatherConditions.filter(v => v === b).length\n          )\n          .pop();\n\n        return {\n          date: day,\n          maxTemp,\n          minTemp,\n          condition: mostCommonCondition,\n        };\n      });\n    });\n}\n\nfunction WeatherForecast() {\n  const [dailySummaries, setDailySummaries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const lat = 44.34; // Example latitude\n  const lon = 10.99; // Example longitude\n\n  useEffect(() => {\n    fetchDailyWeather(lat, lon, apiKey)\n      .then(summaries => {\n        setDailySummaries(summaries);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error('Error fetching weather data:', error);\n        setLoading(false);\n      });\n  }, [lat, lon]);\n\n  return (\n    <div>\n      <h1>Daily Weather Forecast</h1>\n      {loading && <p>Loading...</p>}\n      {!loading && (\n        <ul>\n          {dailySummaries.map(summary => (\n            <li key={summary.date}>\n              <p>Date: {summary.date}</p>\n              <p>Max Temperature: {Math.ceil(summary.maxTemp)}°C</p>\n              <p>Min Temperature: {Math.floor(summary.minTemp)}°C</p>\n              <p>Condition: {summary.condition}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default WeatherForecast;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}