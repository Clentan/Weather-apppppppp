{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clent\\\\OneDrive\\\\Desktop\\\\Weather\\\\weather-weather\\\\src\\\\components\\\\CurrentLocation.jsx\";\nimport React, { useEffect } from 'react';\n//getting a current location/position\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CurrentLocation() {\n  if (navigator.geolocation.getCurrentPosition) {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      const {\n        latitude\n      } = position.coords;\n      const {\n        longitude\n      } = position.coords;\n      fetch(`http://api.openweathermap.org/geo/1.0/reverse?lat={lat}&lon={lon}&limit={limit}&appid={API key}`).then(res => res.json()).then(data => console.log(data));\n\n      //now include the latitude and longitude and fetch api\n      StoreLocation(latitude, longitude);\n      //fething the locatin from the api\n    }, function () {\n      alert('No location dictatedðŸ˜’');\n    });\n  }\n  //Save data into localstorage\n  function StoreLocation(latitude, longitude) {\n    const LocaionCurrent = {\n      latitude: latitude,\n      longitide: longitude\n    };\n    sessionStorage.setItem('MyLocation', JSON.stringify(LocaionCurrent));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_c = CurrentLocation;\nvar _c;\n$RefreshReg$(_c, \"CurrentLocation\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","CurrentLocation","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","fetch","then","res","json","data","console","log","StoreLocation","alert","LocaionCurrent","longitide","sessionStorage","setItem","JSON","stringify","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/clent/OneDrive/Desktop/Weather/weather-weather/src/components/CurrentLocation.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\n//getting a current location/position\r\n\r\nexport default function CurrentLocation() {\r\n\r\n    if(navigator.geolocation.getCurrentPosition)\r\n    {\r\n        navigator.geolocation.getCurrentPosition(function(position) {\r\n\r\n            const{latitude}=position.coords;\r\n            const{longitude}=position.coords;\r\n       fetch(`http://api.openweathermap.org/geo/1.0/reverse?lat={lat}&lon={lon}&limit={limit}&appid={API key}`)\r\n       .then(res => res.json())\r\n       .then(data => console.log(data))\r\n\r\n            //now include the latitude and longitude and fetch api\r\n            StoreLocation(latitude,longitude);\r\n            //fething the locatin from the api\r\n        }, \r\n        function ()\r\n        {\r\n            alert('No location dictatedðŸ˜’')\r\n        }\r\n    )\r\n}\r\n//Save data into localstorage\r\nfunction StoreLocation(latitude,longitude)\r\n{\r\n    const LocaionCurrent= { latitude:latitude ,longitide:longitude};\r\n        sessionStorage.setItem('MyLocation',JSON.stringify(LocaionCurrent));\r\n}\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n  \r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAe,SAASC,eAAeA,CAAA,EAAG;EAEtC,IAAGC,SAAS,CAACC,WAAW,CAACC,kBAAkB,EAC3C;IACIF,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAC,UAASC,QAAQ,EAAE;MAExD,MAAK;QAACC;MAAQ,CAAC,GAACD,QAAQ,CAACE,MAAM;MAC/B,MAAK;QAACC;MAAS,CAAC,GAACH,QAAQ,CAACE,MAAM;MACrCE,KAAK,CAAC,iGAAiG,CAAC,CACvGC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC;;MAE3B;MACAG,aAAa,CAACV,QAAQ,EAACE,SAAS,CAAC;MACjC;IACJ,CAAC,EACD,YACA;MACIS,KAAK,CAAC,wBAAwB,CAAC;IACnC,CACJ,CAAC;EACL;EACA;EACA,SAASD,aAAaA,CAACV,QAAQ,EAACE,SAAS,EACzC;IACI,MAAMU,cAAc,GAAE;MAAEZ,QAAQ,EAACA,QAAQ;MAAEa,SAAS,EAACX;IAAS,CAAC;IAC3DY,cAAc,CAACC,OAAO,CAAC,YAAY,EAACC,IAAI,CAACC,SAAS,CAACL,cAAc,CAAC,CAAC;EAC3E;EAKE,oBACElB,OAAA;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV;AAACC,EAAA,GArCuB3B,eAAe;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}