{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clent\\\\OneDrive\\\\Desktop\\\\Weather\\\\weather-weather\\\\src\\\\components\\\\ThreeHour.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ThreeHour() {\n  _s();\n  const [Loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        const response = await fetch(`api.openweathermap.org/data/2.5/forecast?lat={lat}&lon={lon}&appid=${appid}`);\n        const data = await response.json();\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchWeatherData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(ThreeHour, \"z4gB5M+jwD3OdEyx1qzS9DVzYD0=\");\n_c = ThreeHour;\nvar _c;\n$RefreshReg$(_c, \"ThreeHour\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ThreeHour","_s","Loading","setLoading","error","setError","fetchWeatherData","response","fetch","appid","data","json","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/clent/OneDrive/Desktop/Weather/weather-weather/src/components/ThreeHour.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nexport default function ThreeHour() {\r\n    const[Loading,setLoading]=useState(false);\r\n    const[error,setError]=useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchWeatherData = async () => {\r\n          try {\r\n            const response = await fetch(`api.openweathermap.org/data/2.5/forecast?lat={lat}&lon={lon}&appid=${appid}`);\r\n            \r\n           \r\n            \r\n            const data = await response.json();\r\n          \r\n          } catch (error) {\r\n            setError(error);\r\n          } finally {\r\n            setLoading(false);\r\n          }\r\n        };\r\n    \r\n        fetchWeatherData();\r\n      }, []);\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAK,CAACC,OAAO,EAACC,UAAU,CAAC,GAACN,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAK,CAACO,KAAK,EAACC,QAAQ,CAAC,GAACR,QAAQ,CAAC,IAAI,CAAC;EAGpCD,SAAS,CAAC,MAAM;IACZ,MAAMU,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sEAAsEC,KAAK,EAAE,CAAC;QAI3G,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAEpC,CAAC,CAAC,OAAOP,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAAC;MACjB,CAAC,SAAS;QACRD,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EACV,oBACEP,OAAA;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV;AAACd,EAAA,CA5BuBD,SAAS;AAAAgB,EAAA,GAAThB,SAAS;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}