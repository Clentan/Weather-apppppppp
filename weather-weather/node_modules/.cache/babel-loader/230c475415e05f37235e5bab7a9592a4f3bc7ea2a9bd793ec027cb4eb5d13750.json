{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clent\\\\OneDrive\\\\Desktop\\\\Weather\\\\weather-weather\\\\src\\\\components\\\\CurrentLocation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CurrentLocation() {\n  _s();\n  useEffect(() => {\n    async function fetchCurrentLocation() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(async position => {\n          const limit = 1;\n          const lat = position.coords.latitude;\n          const lon = position.coords.longitude;\n          const appid = \"6a4306a0f2c73c28dc5c3bbf739e87d0\";\n          try {\n            const response = await fetch(`http://api.openweathermap.org/geo/1.0/reverse?lat=${lat}&lon=${lon}&limit=${limit}&appid=${appid}`);\n            const data = await response.json();\n            console.log(data);\n\n            // Save location data to sessionStorage\n            StoreLocation(lat, lon);\n          } catch (error) {\n            console.error('Error fetching the location data:', error);\n          }\n        }, () => {\n          alert('No location detected ðŸ˜’');\n        });\n      } else {\n        alert('Geolocation is not supported by this browser.');\n      }\n    }\n    fetchCurrentLocation();\n  }, []);\n\n  // Save data into sessionStorage\n  function StoreLocation(lat, lon) {\n    const LocationCurrent = {\n      lat,\n      lon\n    };\n    sessionStorage.setItem('MyLocation', JSON.stringify(LocationCurrent));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Current Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(CurrentLocation, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = CurrentLocation;\nvar _c;\n$RefreshReg$(_c, \"CurrentLocation\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","CurrentLocation","_s","fetchCurrentLocation","navigator","geolocation","getCurrentPosition","position","limit","lat","coords","latitude","lon","longitude","appid","response","fetch","data","json","console","log","StoreLocation","error","alert","LocationCurrent","sessionStorage","setItem","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/clent/OneDrive/Desktop/Weather/weather-weather/src/components/CurrentLocation.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nexport default function CurrentLocation() {\r\n\r\n    useEffect(() => {\r\n        async function fetchCurrentLocation() {\r\n            if (navigator.geolocation) {\r\n                navigator.geolocation.getCurrentPosition(async (position) => {\r\n                    const limit = 1;\r\n                    const lat = position.coords.latitude;\r\n                    const lon = position.coords.longitude;\r\n                    const appid = \"6a4306a0f2c73c28dc5c3bbf739e87d0\";\r\n\r\n                    try {\r\n                        const response = await fetch(`http://api.openweathermap.org/geo/1.0/reverse?lat=${lat}&lon=${lon}&limit=${limit}&appid=${appid}`);\r\n                        const data = await response.json();\r\n                        console.log(data);\r\n\r\n                        // Save location data to sessionStorage\r\n                        StoreLocation(lat, lon);\r\n                    } catch (error) {\r\n                        console.error('Error fetching the location data:', error);\r\n                    }\r\n                }, () => {\r\n                    alert('No location detected ðŸ˜’');\r\n                });\r\n            } else {\r\n                alert('Geolocation is not supported by this browser.');\r\n            }\r\n        }\r\n\r\n        fetchCurrentLocation();\r\n    }, []);\r\n\r\n    // Save data into sessionStorage\r\n    function StoreLocation(lat, lon) {\r\n        const LocationCurrent = { lat, lon };\r\n        sessionStorage.setItem('MyLocation', JSON.stringify(LocationCurrent));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Current Location</h1>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EAEtCJ,SAAS,CAAC,MAAM;IACZ,eAAeK,oBAAoBA,CAAA,EAAG;MAClC,IAAIC,SAAS,CAACC,WAAW,EAAE;QACvBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAC,MAAOC,QAAQ,IAAK;UACzD,MAAMC,KAAK,GAAG,CAAC;UACf,MAAMC,GAAG,GAAGF,QAAQ,CAACG,MAAM,CAACC,QAAQ;UACpC,MAAMC,GAAG,GAAGL,QAAQ,CAACG,MAAM,CAACG,SAAS;UACrC,MAAMC,KAAK,GAAG,kCAAkC;UAEhD,IAAI;YACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qDAAqDP,GAAG,QAAQG,GAAG,UAAUJ,KAAK,UAAUM,KAAK,EAAE,CAAC;YACjI,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;YAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;;YAEjB;YACAI,aAAa,CAACZ,GAAG,EAAEG,GAAG,CAAC;UAC3B,CAAC,CAAC,OAAOU,KAAK,EAAE;YACZH,OAAO,CAACG,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;UAC7D;QACJ,CAAC,EAAE,MAAM;UACLC,KAAK,CAAC,yBAAyB,CAAC;QACpC,CAAC,CAAC;MACN,CAAC,MAAM;QACHA,KAAK,CAAC,+CAA+C,CAAC;MAC1D;IACJ;IAEApB,oBAAoB,CAAC,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,SAASkB,aAAaA,CAACZ,GAAG,EAAEG,GAAG,EAAE;IAC7B,MAAMY,eAAe,GAAG;MAAEf,GAAG;MAAEG;IAAI,CAAC;IACpCa,cAAc,CAACC,OAAO,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACJ,eAAe,CAAC,CAAC;EACzE;EAEA,oBACIxB,OAAA;IAAA6B,QAAA,eACI7B,OAAA;MAAA6B,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEd;AAAC/B,EAAA,CA3CuBD,eAAe;AAAAiC,EAAA,GAAfjC,eAAe;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}