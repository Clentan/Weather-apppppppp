{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clent\\\\OneDrive\\\\Desktop\\\\Weather\\\\weather-weather\\\\src\\\\components\\\\CurrentLocation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\n//getting a current location/position\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CurrentLocation() {\n  _s();\n  useEffect(function () {\n    async function CurrentLocation() {\n      if (navigator.geolocation.getCurrentPosition) {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          const limit = 1;\n          const lat = position.coords.latitude;\n          const lon = position.coords.longitude;\n          const appid = \"6a4306a0f2c73c28dc5c3bbf739e87d0\";\n          fetch(`http://api.openweathermap.org/geo/1.0/reverse? \n                  lat=${lat}&lon=${lon}&limit=${limit}&appid=${appid}`).then(res => res.json()).then(data => console.log(data));\n\n          //now include the latitude and longitude and fetch api\n          StoreLocation(lat, lon);\n          //fething the locatin from the api\n        }, function () {\n          alert('No location dictatedðŸ˜’');\n        });\n      }\n    }\n  }, []);\n\n  //Save data into localstorage\n  function StoreLocation(lat, lon) {\n    const LocaionCurrent = {\n      lat: lat,\n      lon: lon\n    };\n    sessionStorage.setItem('MyLocation', JSON.stringify(LocaionCurrent));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Current Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(CurrentLocation, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = CurrentLocation;\nvar _c;\n$RefreshReg$(_c, \"CurrentLocation\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","CurrentLocation","_s","navigator","geolocation","getCurrentPosition","position","limit","lat","coords","latitude","lon","longitude","appid","fetch","then","res","json","data","console","log","StoreLocation","alert","LocaionCurrent","sessionStorage","setItem","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/clent/OneDrive/Desktop/Weather/weather-weather/src/components/CurrentLocation.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\n//getting a current location/position\r\n\r\n\r\n\r\n\r\nexport default function CurrentLocation() {\r\n\r\n    useEffect( function()\r\n    {\r\n        async function CurrentLocation(){\r\n            if(navigator.geolocation.getCurrentPosition)\r\n                {\r\n                    navigator.geolocation.getCurrentPosition(function(position) {\r\n            \r\n                        const limit=1;\r\n                        const lat = position.coords.latitude;\r\n                        const lon = position.coords.longitude;\r\n                         const appid = \"6a4306a0f2c73c28dc5c3bbf739e87d0\";\r\n                         \r\n             fetch(`http://api.openweathermap.org/geo/1.0/reverse? \r\n                  lat=${lat}&lon=${lon}&limit=${limit}&appid=${appid}`)\r\n            .then(res => res.json())\r\n            .then(data => console.log(data))\r\n            \r\n                        //now include the latitude and longitude and fetch api\r\n                        StoreLocation(lat,lon);\r\n                        //fething the locatin from the api\r\n                    }, \r\n                    function ()\r\n                    {\r\n                        alert('No location dictatedðŸ˜’')\r\n                    }\r\n                )\r\n            } \r\n                \r\n        }\r\n    },[])\r\n    \r\n//Save data into localstorage\r\nfunction StoreLocation(lat,lon,)\r\n{\r\n    const LocaionCurrent= { lat:lat ,lon:lon};\r\n        sessionStorage.setItem('MyLocation',JSON.stringify(LocaionCurrent));\r\n}\r\n\r\n  return (\r\n    <div>\r\n        <h1>Current Location</h1>\r\n\r\n  \r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKA,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EAEtCJ,SAAS,CAAE,YACX;IACI,eAAeG,eAAeA,CAAA,EAAE;MAC5B,IAAGE,SAAS,CAACC,WAAW,CAACC,kBAAkB,EACvC;QACIF,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAC,UAASC,QAAQ,EAAE;UAExD,MAAMC,KAAK,GAAC,CAAC;UACb,MAAMC,GAAG,GAAGF,QAAQ,CAACG,MAAM,CAACC,QAAQ;UACpC,MAAMC,GAAG,GAAGL,QAAQ,CAACG,MAAM,CAACG,SAAS;UACpC,MAAMC,KAAK,GAAG,kCAAkC;UAE5DC,KAAK,CAAC;AACnB,wBAAwBN,GAAG,QAAQG,GAAG,UAAUJ,KAAK,UAAUM,KAAK,EAAE,CAAC,CAC1DE,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC;;UAEpB;UACAG,aAAa,CAACb,GAAG,EAACG,GAAG,CAAC;UACtB;QACJ,CAAC,EACD,YACA;UACIW,KAAK,CAAC,wBAAwB,CAAC;QACnC,CACJ,CAAC;MACL;IAEJ;EACJ,CAAC,EAAC,EAAE,CAAC;;EAET;EACA,SAASD,aAAaA,CAACb,GAAG,EAACG,GAAG,EAC9B;IACI,MAAMY,cAAc,GAAE;MAAEf,GAAG,EAACA,GAAG;MAAEG,GAAG,EAACA;IAAG,CAAC;IACrCa,cAAc,CAACC,OAAO,CAAC,YAAY,EAACC,IAAI,CAACC,SAAS,CAACJ,cAAc,CAAC,CAAC;EAC3E;EAEE,oBACEvB,OAAA;IAAA4B,QAAA,eACI5B,OAAA;MAAA4B,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGxB,CAAC;AAEV;AAAC9B,EAAA,CA/CuBD,eAAe;AAAAgC,EAAA,GAAfhC,eAAe;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}