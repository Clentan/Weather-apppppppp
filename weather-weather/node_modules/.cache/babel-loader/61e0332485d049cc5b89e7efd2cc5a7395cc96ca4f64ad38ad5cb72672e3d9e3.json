{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clent\\\\OneDrive\\\\Desktop\\\\Weather\\\\weather-weather\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Header from './components/Header';\nimport CurrentLocation from './components/CurrentLocation';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main(wmoCode) {\n  //wmoCode it use a code to tract an application ..so the code has a code\n  //here i am passing wmoCODE\n\n  //first we deal with the currnt location situation\n  //alrigth i am going to use WMO(weather interpretation code)\n  //niw i must trnalste the wmo to what the icons will be acccesed\n  const weatherIcons = [{\n    code: [0],\n    icon: \"☀️\"\n  },\n  // Clear sky\n  {\n    code: [1],\n    icon: \"🌤\"\n  },\n  // Mainly clear\n  {\n    code: [2],\n    icon: \"⛅️\"\n  },\n  // Partly cloudy\n  {\n    code: [3],\n    icon: \"☁️\"\n  },\n  // Overcast\n  {\n    code: [45],\n    icon: \"🌫\"\n  },\n  // Fog\n  {\n    code: [48],\n    icon: \"🌁\"\n  },\n  // Depositing rime fog\n  {\n    code: [51],\n    icon: \"🌦\"\n  },\n  // Drizzle: Light intensity\n  {\n    code: [53],\n    icon: \"🌧\"\n  },\n  // Drizzle: Moderate intensity\n  {\n    code: [55],\n    icon: \"🌧️\"\n  },\n  // Drizzle: Dense intensity\n  {\n    code: [56],\n    icon: \"🌧\"\n  },\n  // Freezing Drizzle: Light intensity\n  {\n    code: [57],\n    icon: \"🌧️\"\n  },\n  // Freezing Drizzle: Dense intensity\n  {\n    code: [61],\n    icon: \"🌦\"\n  },\n  // Rain: Slight intensity\n  {\n    code: [63],\n    icon: \"🌧\"\n  },\n  // Rain: Moderate intensity\n  {\n    code: [65],\n    icon: \"🌧️\"\n  },\n  // Rain: Heavy intensity\n  {\n    code: [66],\n    icon: \"🌨\"\n  },\n  // Freezing Rain: Light intensity\n  {\n    code: [67],\n    icon: \"🌨️\"\n  },\n  // Freezing Rain: Heavy intensity\n  {\n    code: [71],\n    icon: \"🌨\"\n  },\n  // Snow fall: Slight intensity\n  {\n    code: [73],\n    icon: \"🌨\"\n  },\n  // Snow fall: Moderate intensity\n  {\n    code: [75],\n    icon: \"🌨️\"\n  },\n  // Snow fall: Heavy intensity\n  {\n    code: [77],\n    icon: \"❄️\"\n  },\n  // Snow grains\n  {\n    code: [80],\n    icon: \"🌧\"\n  },\n  // Rain showers: Slight intensity\n  {\n    code: [81],\n    icon: \"🌧️\"\n  },\n  // Rain showers: Moderate intensity\n  {\n    code: [82],\n    icon: \"🌧️\"\n  },\n  // Rain showers: Violent intensity\n  {\n    code: [85],\n    icon: \"🌨\"\n  },\n  // Snow showers: Slight intensity\n  {\n    code: [86],\n    icon: \"🌨️\"\n  },\n  // Snow showers: Heavy intensity\n  {\n    code: [95],\n    icon: \"🌩\"\n  },\n  // Thunderstorm: Slight or moderate\n  {\n    code: [96],\n    icon: \"⛈️\"\n  },\n  // Thunderstorm with slight hail\n  {\n    code: [99],\n    icon: \"⛈️\"\n  },\n  // Thunderstorm with heavy hail\n  {\n    code: [21],\n    icon: \"🌬️\"\n  },\n  // Breezy conditions\n  {\n    code: [22],\n    icon: \"🌪️\"\n  },\n  // Tornado\n  {\n    code: [31],\n    icon: \"🌫️\"\n  },\n  // Mist\n  {\n    code: [32],\n    icon: \"🌁\"\n  },\n  // Dense fog\n  {\n    code: [41],\n    icon: \"🌤️\"\n  },\n  // Partly sunny\n  {\n    code: [42],\n    icon: \"⛅️\"\n  },\n  // Intermittent clouds\n  {\n    code: [43],\n    icon: \"🌥️\"\n  },\n  // Mostly cloudy\n  {\n    code: [51, 52],\n    icon: \"🌧\"\n  },\n  // Light rain or drizzle\n  {\n    code: [54],\n    icon: \"🌧️\"\n  },\n  // Heavy drizzle\n  {\n    code: [62],\n    icon: \"🌧️\"\n  },\n  // Steady rain\n  {\n    code: [83],\n    icon: \"🌨️\"\n  },\n  // Hail showers\n  {\n    code: [84],\n    icon: \"🌨\"\n  } // Sleet\n  ];\n  function getWeatherIcon(wmoCode) {\n    // Use the find() method to search through the weatherIcons array\n    const match = weatherIcons.find(item => item.code.includes(wmoCode));\n\n    // If a matching WMO code is found, return the corresponding icon\n    // If not found, return a default \"❓\" icon indicating an unknown weather condition\n    return match ? match.icon : \"❓\";\n  }\n}\n\n//chnaging the date into names\n_c = Main;\nfunction ChangeTheDate(datestr) {\n  const date = new Date(datestr); //this brings the actual data with laptop format\n  return date.toLocaleString('en-US', {\n    weekday: 'short'\n  }); //Mon,Tu,wed\n  //when u return you prevent to define\n}\n_c2 = ChangeTheDate;\nconsole.log(ChangeTheDate(22 - 12 - 2023)); //it is working\n\nfunction App() {\n  _s();\n  const [name, setName] = useState(\"\"); // State for the location name\n  const [isLoading, setIsLoading] = useState(false); // State for loading status\n\n  async function fetchWeather() {\n    try {\n      setIsLoading(true); // Set loading status to true while fetching data\n\n      const geoRes = await fetch(`https://geocoding-api.open-meteo.com/v1/search?name=${name}`);\n      const geoData = await geoRes.json();\n\n      // Handle the fetched data (this part is missing in your code)\n      console.log(geoData); // Just for debugging; you can process this data as needed\n\n      // Further code to fetch weather data using latitude and longitude from geoData\n    } catch (error) {\n      console.error(\"Error fetching weather data:\", error); // Handle any errors\n    } finally {\n      setIsLoading(false); // Set loading status back to false after fetching\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      name: name,\n      setName: setName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Get weather update here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentLocation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SX/OmTqMJsVy111rBX1WhCR2RHI=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"ChangeTheDate\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["Header","CurrentLocation","useEffect","useState","jsxDEV","_jsxDEV","Main","wmoCode","weatherIcons","code","icon","getWeatherIcon","match","find","item","includes","_c","ChangeTheDate","datestr","date","Date","toLocaleString","weekday","_c2","console","log","App","_s","name","setName","isLoading","setIsLoading","fetchWeather","geoRes","fetch","geoData","json","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["C:/Users/clent/OneDrive/Desktop/Weather/weather-weather/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Header from './components/Header';\nimport CurrentLocation from './components/CurrentLocation';\nimport { useEffect, useState } from 'react';\n\n\n\n\nfunction Main(wmoCode)\n{\n//wmoCode it use a code to tract an application ..so the code has a code\n//here i am passing wmoCODE\n\n//first we deal with the currnt location situation\n//alrigth i am going to use WMO(weather interpretation code)\n//niw i must trnalste the wmo to what the icons will be acccesed\nconst weatherIcons = [\n  { code: [0], icon: \"☀️\" },           // Clear sky\n  { code: [1], icon: \"🌤\" },            // Mainly clear\n  { code: [2], icon: \"⛅️\" },           // Partly cloudy\n  { code: [3], icon: \"☁️\" },           // Overcast\n  { code: [45], icon: \"🌫\" },           // Fog\n  { code: [48], icon: \"🌁\" },           // Depositing rime fog\n  { code: [51], icon: \"🌦\" },           // Drizzle: Light intensity\n  { code: [53], icon: \"🌧\" },           // Drizzle: Moderate intensity\n  { code: [55], icon: \"🌧️\" },          // Drizzle: Dense intensity\n  { code: [56], icon: \"🌧\" },           // Freezing Drizzle: Light intensity\n  { code: [57], icon: \"🌧️\" },          // Freezing Drizzle: Dense intensity\n  { code: [61], icon: \"🌦\" },           // Rain: Slight intensity\n  { code: [63], icon: \"🌧\" },           // Rain: Moderate intensity\n  { code: [65], icon: \"🌧️\" },          // Rain: Heavy intensity\n  { code: [66], icon: \"🌨\" },           // Freezing Rain: Light intensity\n  { code: [67], icon: \"🌨️\" },          // Freezing Rain: Heavy intensity\n  { code: [71], icon: \"🌨\" },           // Snow fall: Slight intensity\n  { code: [73], icon: \"🌨\" },           // Snow fall: Moderate intensity\n  { code: [75], icon: \"🌨️\" },          // Snow fall: Heavy intensity\n  { code: [77], icon: \"❄️\" },          // Snow grains\n  { code: [80], icon: \"🌧\" },           // Rain showers: Slight intensity\n  { code: [81], icon: \"🌧️\" },          // Rain showers: Moderate intensity\n  { code: [82], icon: \"🌧️\" },          // Rain showers: Violent intensity\n  { code: [85], icon: \"🌨\" },           // Snow showers: Slight intensity\n  { code: [86], icon: \"🌨️\" },          // Snow showers: Heavy intensity\n  { code: [95], icon: \"🌩\" },           // Thunderstorm: Slight or moderate\n  { code: [96], icon: \"⛈️\" },          // Thunderstorm with slight hail\n  { code: [99], icon: \"⛈️\" },          // Thunderstorm with heavy hail\n  { code: [21], icon: \"🌬️\" },          // Breezy conditions\n  { code: [22], icon: \"🌪️\" },          // Tornado\n  { code: [31], icon: \"🌫️\" },          // Mist\n  { code: [32], icon: \"🌁\" },           // Dense fog\n  { code: [41], icon: \"🌤️\" },          // Partly sunny\n  { code: [42], icon: \"⛅️\" },          // Intermittent clouds\n  { code: [43], icon: \"🌥️\" },          // Mostly cloudy\n  { code: [51, 52], icon: \"🌧\" },       // Light rain or drizzle\n  { code: [54], icon: \"🌧️\" },          // Heavy drizzle\n  { code: [62], icon: \"🌧️\" },          // Steady rain\n  { code: [83], icon: \"🌨️\" },          // Hail showers\n  { code: [84], icon: \"🌨\" },           // Sleet\n];\n\n\nfunction getWeatherIcon(wmoCode) {\n  // Use the find() method to search through the weatherIcons array\n  const match = weatherIcons.find(item => item.code.includes(wmoCode));\n\n  // If a matching WMO code is found, return the corresponding icon\n  // If not found, return a default \"❓\" icon indicating an unknown weather condition\n  return match ? match.icon : \"❓\";\n}\n}\n\n//chnaging the date into names\nfunction ChangeTheDate(datestr){\n  const date = new Date(datestr);//this brings the actual data with laptop format\n  return date.toLocaleString('en-US', { weekday: 'short' });//Mon,Tu,wed\n  //when u return you prevent to define\n}\nconsole.log(ChangeTheDate(22-12-2023))//it is working\n\n\nfunction App() {\n  const [name, setName] = useState(\"\"); // State for the location name\n  const [isLoading, setIsLoading] = useState(false); // State for loading status\n\n  async function fetchWeather() {\n    try {\n      setIsLoading(true); // Set loading status to true while fetching data\n\n      const geoRes = await fetch(\n        `https://geocoding-api.open-meteo.com/v1/search?name=${name}`\n      );\n      const geoData = await geoRes.json();\n\n      // Handle the fetched data (this part is missing in your code)\n      console.log(geoData); // Just for debugging; you can process this data as needed\n\n      // Further code to fetch weather data using latitude and longitude from geoData\n    } catch (error) {\n      console.error(\"Error fetching weather data:\", error); // Handle any errors\n    } finally {\n      setIsLoading(false); // Set loading status back to false after fetching\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Header name={name} setName={setName} /> {/* Pass state and state setter as props */}\n      <h1>Get weather update here</h1>\n      <CurrentLocation />\n      {/* Optionally, add a button or useEffect to trigger fetchWeather */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}