{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clent\\\\OneDrive\\\\Desktop\\\\Weather\\\\weather-weather\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Function to get user's location and fetch weather data\n    const getLocation = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(async position => {\n          const {\n            latitude,\n            longitude\n          } = position.coords;\n          console.log(`Latitude: ${latitude}, Longitude: ${longitude}`); // Debugging\n\n          try {\n            const response = await fetch(`https://api.meteoapi.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&apikey=6a4306a0f2c73c28dc5c3bbf739e87d0`);\n            console.log('Response:', response); // Debugging\n\n            if (!response.ok) {\n              throw new Error('Network response was not ok');\n            }\n            const data = await response.json();\n            console.log('Data:', data); // Debugging\n            setWeather(data);\n            setLoading(false);\n          } catch (err) {\n            console.error('Fetch error:', err); // Debugging\n            setError('Failed to fetch weather data');\n            setLoading(false);\n          }\n        }, err => {\n          console.error('Geolocation error:', err); // Debugging\n          setError('Geolocation permission denied');\n          setLoading(false);\n        });\n      } else {\n        setError('Geolocation is not supported by this browser');\n        setLoading(false);\n      }\n    };\n    getLocation();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Get Weather Update Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: weather && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Current Weather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Location: \", weather.location.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temperature: \", weather.current.temperature, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Weather: \", weather.current.weather_descriptions[0]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TVsks5rssGOnhEQ1DibgKtVD/q4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","weather","setWeather","loading","setLoading","error","setError","getLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","console","log","response","fetch","ok","Error","data","json","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","location","name","current","temperature","weather_descriptions","_c","$RefreshReg$"],"sources":["C:/Users/clent/OneDrive/Desktop/Weather/weather-weather/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [weather, setWeather] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Function to get user's location and fetch weather data\n    const getLocation = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          async (position) => {\n            const { latitude, longitude } = position.coords;\n            console.log(`Latitude: ${latitude}, Longitude: ${longitude}`); // Debugging\n\n            try {\n              const response = await fetch(\n                `https://api.meteoapi.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&apikey=6a4306a0f2c73c28dc5c3bbf739e87d0`\n              );\n              console.log('Response:', response); // Debugging\n\n              if (!response.ok) {\n                throw new Error('Network response was not ok');\n              }\n              const data = await response.json();\n              console.log('Data:', data); // Debugging\n              setWeather(data);\n              setLoading(false);\n            } catch (err) {\n              console.error('Fetch error:', err); // Debugging\n              setError('Failed to fetch weather data');\n              setLoading(false);\n            }\n          },\n          (err) => {\n            console.error('Geolocation error:', err); // Debugging\n            setError('Geolocation permission denied');\n            setLoading(false);\n          }\n        );\n      } else {\n        setError('Geolocation is not supported by this browser');\n        setLoading(false);\n      }\n    };\n\n    getLocation();\n  }, []);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{error}</p>;\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Get Weather Update Here</h1>\n      </header>\n      <main>\n        {weather && (\n          <div>\n            <h2>Current Weather</h2>\n            <p>Location: {weather.location.name}</p>\n            <p>Temperature: {weather.current.temperature}Â°C</p>\n            <p>Weather: {weather.current.weather_descriptions[0]}</p>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}