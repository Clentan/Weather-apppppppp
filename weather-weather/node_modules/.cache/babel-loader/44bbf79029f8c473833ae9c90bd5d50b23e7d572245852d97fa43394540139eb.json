{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clent\\\\OneDrive\\\\Desktop\\\\Weather\\\\weather-weather\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Header from './components/Header';\nimport CurrentLocation from './components/CurrentLocation';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main(wmoCode) {\n  //wmoCode it use a code to tract an application ..so the code has a code\n  //here i am passing wmoCODE\n\n  //first we deal with the currnt location situation\n  //alrigth i am going to use WMO(weather interpretation code)\n  //niw i must trnalste the wmo to what the icons will be acccesed\n  const weatherIcons = [{\n    code: [0],\n    icon: \"‚òÄÔ∏è\"\n  },\n  // Clear sky\n  {\n    code: [1],\n    icon: \"üå§\"\n  },\n  // Mainly clear\n  {\n    code: [2],\n    icon: \"‚õÖÔ∏è\"\n  },\n  // Partly cloudy\n  {\n    code: [3],\n    icon: \"‚òÅÔ∏è\"\n  },\n  // Overcast\n  {\n    code: [45],\n    icon: \"üå´\"\n  },\n  // Fog\n  {\n    code: [48],\n    icon: \"üåÅ\"\n  },\n  // Depositing rime fog\n  {\n    code: [51],\n    icon: \"üå¶\"\n  },\n  // Drizzle: Light intensity\n  {\n    code: [53],\n    icon: \"üåß\"\n  },\n  // Drizzle: Moderate intensity\n  {\n    code: [55],\n    icon: \"üåßÔ∏è\"\n  },\n  // Drizzle: Dense intensity\n  {\n    code: [56],\n    icon: \"üåß\"\n  },\n  // Freezing Drizzle: Light intensity\n  {\n    code: [57],\n    icon: \"üåßÔ∏è\"\n  },\n  // Freezing Drizzle: Dense intensity\n  {\n    code: [61],\n    icon: \"üå¶\"\n  },\n  // Rain: Slight intensity\n  {\n    code: [63],\n    icon: \"üåß\"\n  },\n  // Rain: Moderate intensity\n  {\n    code: [65],\n    icon: \"üåßÔ∏è\"\n  },\n  // Rain: Heavy intensity\n  {\n    code: [66],\n    icon: \"üå®\"\n  },\n  // Freezing Rain: Light intensity\n  {\n    code: [67],\n    icon: \"üå®Ô∏è\"\n  },\n  // Freezing Rain: Heavy intensity\n  {\n    code: [71],\n    icon: \"üå®\"\n  },\n  // Snow fall: Slight intensity\n  {\n    code: [73],\n    icon: \"üå®\"\n  },\n  // Snow fall: Moderate intensity\n  {\n    code: [75],\n    icon: \"üå®Ô∏è\"\n  },\n  // Snow fall: Heavy intensity\n  {\n    code: [77],\n    icon: \"‚ùÑÔ∏è\"\n  },\n  // Snow grains\n  {\n    code: [80],\n    icon: \"üåß\"\n  },\n  // Rain showers: Slight intensity\n  {\n    code: [81],\n    icon: \"üåßÔ∏è\"\n  },\n  // Rain showers: Moderate intensity\n  {\n    code: [82],\n    icon: \"üåßÔ∏è\"\n  },\n  // Rain showers: Violent intensity\n  {\n    code: [85],\n    icon: \"üå®\"\n  },\n  // Snow showers: Slight intensity\n  {\n    code: [86],\n    icon: \"üå®Ô∏è\"\n  },\n  // Snow showers: Heavy intensity\n  {\n    code: [95],\n    icon: \"üå©\"\n  },\n  // Thunderstorm: Slight or moderate\n  {\n    code: [96],\n    icon: \"‚õàÔ∏è\"\n  },\n  // Thunderstorm with slight hail\n  {\n    code: [99],\n    icon: \"‚õàÔ∏è\"\n  },\n  // Thunderstorm with heavy hail\n  {\n    code: [21],\n    icon: \"üå¨Ô∏è\"\n  },\n  // Breezy conditions\n  {\n    code: [22],\n    icon: \"üå™Ô∏è\"\n  },\n  // Tornado\n  {\n    code: [31],\n    icon: \"üå´Ô∏è\"\n  },\n  // Mist\n  {\n    code: [32],\n    icon: \"üåÅ\"\n  },\n  // Dense fog\n  {\n    code: [41],\n    icon: \"üå§Ô∏è\"\n  },\n  // Partly sunny\n  {\n    code: [42],\n    icon: \"‚õÖÔ∏è\"\n  },\n  // Intermittent clouds\n  {\n    code: [43],\n    icon: \"üå•Ô∏è\"\n  },\n  // Mostly cloudy\n  {\n    code: [51, 52],\n    icon: \"üåß\"\n  },\n  // Light rain or drizzle\n  {\n    code: [54],\n    icon: \"üåßÔ∏è\"\n  },\n  // Heavy drizzle\n  {\n    code: [62],\n    icon: \"üåßÔ∏è\"\n  },\n  // Steady rain\n  {\n    code: [83],\n    icon: \"üå®Ô∏è\"\n  },\n  // Hail showers\n  {\n    code: [84],\n    icon: \"üå®\"\n  } // Sleet\n  ];\n  function getWeatherIcon(wmoCode) {\n    // Use the find() method to search through the weatherIcons array\n    const match = weatherIcons.find(item => item.code.includes(wmoCode));\n\n    // If a matching WMO code is found, return the corresponding icon\n    // If not found, return a default \"‚ùì\" icon indicating an unknown weather condition\n    return match ? match.icon : \"‚ùì\";\n  }\n}\n_c = Main;\nconst icon = getWeatherIcon(43); // This should return the icon \"üå•Ô∏è\"\nconsole.log(icon); // is going to return numbee nu,mber 43 array\n\n//chnaging the date into names\nfunction ChangeTheDate(datestr) {\n  const date = new Date(datestr); //this brings the actual data with laptop format\n  return date.toLocaleString('en-US', {\n    weekday: 'short'\n  }); //Mon,Tu,wed\n  //when u return you prevent to define\n}\n_c2 = ChangeTheDate;\nconsole.log(ChangeTheDate(22 - 12 - 2023)); //it is working\n\nfunction APP() {\n  _s();\n  //use useffect\n\n  const [weather, setWeather] = useState({}); // Initialize state with an empty object\n  const [location, setLocation] = useState({}); // Initialize state with an empty object\n  const [error, setError] = useState(null); // Initialize state with null\n  const [loading, setLoading] = useState(false); // Initialize state with false\n  const [date, setDate] = useState(new Date()); // Initialize state with the current date\n  const [name, setName] = useState();\n  const [weatherIcon, setWeatherIcon] = useState(null); // Initialize state with null\n\n  async function fetchWeather() {\n    try {\n      setLoading(true); // Set loading status to true while fetching data\n\n      // 1) Fetch the location (geocoding) data\n      const geoRes = await fetch(`https://geocoding-api.open-meteo.com/v1/search?name=${name}` // API call to get latitude, longitude, and other info\n      );\n      const geoData = await geoRes.json(); // Parse the JSON response\n      console.log(geoData); // Log the geocoding data for debugging\n\n      if (!geoData.results) throw new Error(\"Location not found\"); // Throw an error if no location is found\n\n      // Destructure the relevant location data from the response\n      const {\n        latitude,\n        longitude,\n        timezone,\n        name,\n        country_code\n      } = geoData.results.at(0); // Use the first result\n\n      // Set the display location with the name and flag emoji\n      setDisplayLocation(`${name} ${convertToFlag(country_code)}`);\n\n      // 2) Fetch the actual weather data based on latitude and longitude\n      const weatherRes = await fetch(`https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&timezone=${timezone}&daily=weathercode,temperature_2m_max,temperature_2m_min` // API call for weather data\n      );\n      const weatherData = await weatherRes.json(); // Parse the JSON response\n\n      setWeather(weatherData.daily); // Set the weather data state with the daily forecast\n    } catch (err) {\n      console.error(err); // Log any errors to the console\n    } finally {\n      setIsLoading(false); // Set loading status to false after fetching is complete\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      name: name,\n      setName: setName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Get weather update here \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentLocation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s(APP, \"//U+SfoU/oSVxu+vFy++Y+qX2d8=\");\n_c3 = APP;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"ChangeTheDate\");\n$RefreshReg$(_c3, \"APP\");","map":{"version":3,"names":["Header","CurrentLocation","useEffect","jsxDEV","_jsxDEV","Main","wmoCode","weatherIcons","code","icon","getWeatherIcon","match","find","item","includes","_c","console","log","ChangeTheDate","datestr","date","Date","toLocaleString","weekday","_c2","APP","_s","weather","setWeather","useState","location","setLocation","error","setError","loading","setLoading","setDate","name","setName","weatherIcon","setWeatherIcon","fetchWeather","geoRes","fetch","geoData","json","results","Error","latitude","longitude","timezone","country_code","at","setDisplayLocation","convertToFlag","weatherRes","weatherData","daily","err","setIsLoading","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c3","App","$RefreshReg$"],"sources":["C:/Users/clent/OneDrive/Desktop/Weather/weather-weather/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Header from './components/Header';\nimport CurrentLocation from './components/CurrentLocation';\nimport { useEffect } from 'react';\n\n\n\n\nfunction Main(wmoCode)\n{\n//wmoCode it use a code to tract an application ..so the code has a code\n//here i am passing wmoCODE\n\n//first we deal with the currnt location situation\n//alrigth i am going to use WMO(weather interpretation code)\n//niw i must trnalste the wmo to what the icons will be acccesed\nconst weatherIcons = [\n  { code: [0], icon: \"‚òÄÔ∏è\" },           // Clear sky\n  { code: [1], icon: \"üå§\" },            // Mainly clear\n  { code: [2], icon: \"‚õÖÔ∏è\" },           // Partly cloudy\n  { code: [3], icon: \"‚òÅÔ∏è\" },           // Overcast\n  { code: [45], icon: \"üå´\" },           // Fog\n  { code: [48], icon: \"üåÅ\" },           // Depositing rime fog\n  { code: [51], icon: \"üå¶\" },           // Drizzle: Light intensity\n  { code: [53], icon: \"üåß\" },           // Drizzle: Moderate intensity\n  { code: [55], icon: \"üåßÔ∏è\" },          // Drizzle: Dense intensity\n  { code: [56], icon: \"üåß\" },           // Freezing Drizzle: Light intensity\n  { code: [57], icon: \"üåßÔ∏è\" },          // Freezing Drizzle: Dense intensity\n  { code: [61], icon: \"üå¶\" },           // Rain: Slight intensity\n  { code: [63], icon: \"üåß\" },           // Rain: Moderate intensity\n  { code: [65], icon: \"üåßÔ∏è\" },          // Rain: Heavy intensity\n  { code: [66], icon: \"üå®\" },           // Freezing Rain: Light intensity\n  { code: [67], icon: \"üå®Ô∏è\" },          // Freezing Rain: Heavy intensity\n  { code: [71], icon: \"üå®\" },           // Snow fall: Slight intensity\n  { code: [73], icon: \"üå®\" },           // Snow fall: Moderate intensity\n  { code: [75], icon: \"üå®Ô∏è\" },          // Snow fall: Heavy intensity\n  { code: [77], icon: \"‚ùÑÔ∏è\" },          // Snow grains\n  { code: [80], icon: \"üåß\" },           // Rain showers: Slight intensity\n  { code: [81], icon: \"üåßÔ∏è\" },          // Rain showers: Moderate intensity\n  { code: [82], icon: \"üåßÔ∏è\" },          // Rain showers: Violent intensity\n  { code: [85], icon: \"üå®\" },           // Snow showers: Slight intensity\n  { code: [86], icon: \"üå®Ô∏è\" },          // Snow showers: Heavy intensity\n  { code: [95], icon: \"üå©\" },           // Thunderstorm: Slight or moderate\n  { code: [96], icon: \"‚õàÔ∏è\" },          // Thunderstorm with slight hail\n  { code: [99], icon: \"‚õàÔ∏è\" },          // Thunderstorm with heavy hail\n  { code: [21], icon: \"üå¨Ô∏è\" },          // Breezy conditions\n  { code: [22], icon: \"üå™Ô∏è\" },          // Tornado\n  { code: [31], icon: \"üå´Ô∏è\" },          // Mist\n  { code: [32], icon: \"üåÅ\" },           // Dense fog\n  { code: [41], icon: \"üå§Ô∏è\" },          // Partly sunny\n  { code: [42], icon: \"‚õÖÔ∏è\" },          // Intermittent clouds\n  { code: [43], icon: \"üå•Ô∏è\" },          // Mostly cloudy\n  { code: [51, 52], icon: \"üåß\" },       // Light rain or drizzle\n  { code: [54], icon: \"üåßÔ∏è\" },          // Heavy drizzle\n  { code: [62], icon: \"üåßÔ∏è\" },          // Steady rain\n  { code: [83], icon: \"üå®Ô∏è\" },          // Hail showers\n  { code: [84], icon: \"üå®\" },           // Sleet\n];\n\n\nfunction getWeatherIcon(wmoCode) {\n  // Use the find() method to search through the weatherIcons array\n  const match = weatherIcons.find(item => item.code.includes(wmoCode));\n\n  // If a matching WMO code is found, return the corresponding icon\n  // If not found, return a default \"‚ùì\" icon indicating an unknown weather condition\n  return match ? match.icon : \"‚ùì\";\n}\n}\n\nconst icon = getWeatherIcon(43); // This should return the icon \"üå•Ô∏è\"\nconsole.log(icon); // is going to return numbee nu,mber 43 array\n\n//chnaging the date into names\nfunction ChangeTheDate(datestr){\n  const date = new Date(datestr);//this brings the actual data with laptop format\n  return date.toLocaleString('en-US', { weekday: 'short' });//Mon,Tu,wed\n  //when u return you prevent to define\n}\nconsole.log(ChangeTheDate(22-12-2023))//it is working\n\n\nfunction APP()\n{\n  \n  //use useffect\n\n  const [weather, setWeather] = useState({}); // Initialize state with an empty object\n  const [location, setLocation] = useState({}); // Initialize state with an empty object\n  const [error, setError] = useState(null); // Initialize state with null\n  const [loading, setLoading] = useState(false); // Initialize state with false\n  const [date, setDate] = useState(new Date()); // Initialize state with the current date\n  const [name, setName] = useState();\n  const [weatherIcon, setWeatherIcon] = useState(null); // Initialize state with null\n\n\n\n  async function fetchWeather() {\n    try {\n      setLoading(true); // Set loading status to true while fetching data\n\n      // 1) Fetch the location (geocoding) data\n      const geoRes = await fetch(\n        `https://geocoding-api.open-meteo.com/v1/search?name=${name}` // API call to get latitude, longitude, and other info\n      );\n      const geoData = await geoRes.json(); // Parse the JSON response\n      console.log(geoData); // Log the geocoding data for debugging\n\n      if (!geoData.results) throw new Error(\"Location not found\"); // Throw an error if no location is found\n\n      // Destructure the relevant location data from the response\n      const { latitude, longitude, timezone, name, country_code } =\n        geoData.results.at(0); // Use the first result\n\n      // Set the display location with the name and flag emoji\n      setDisplayLocation(`${name} ${convertToFlag(country_code)}`);\n\n      // 2) Fetch the actual weather data based on latitude and longitude\n      const weatherRes = await fetch(\n        `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&timezone=${timezone}&daily=weathercode,temperature_2m_max,temperature_2m_min` // API call for weather data\n      );\n      const weatherData = await weatherRes.json(); // Parse the JSON response\n\n      setWeather(weatherData.daily); // Set the weather data state with the daily forecast\n    } catch (err) {\n      console.error(err); // Log any errors to the console\n    } finally {\n      setIsLoading(false); // Set loading status to false after fetching is complete\n    }\n  }\n  return (\n    <div className=\"App\">\n      <Header name={name} setName={setName}/>\n      <h1>Get weather update here </h1>\n      <CurrentLocation/>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}